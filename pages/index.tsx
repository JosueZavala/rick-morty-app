import type { NextPage } from "next";
import Head from "next/head";
import IntroductionCard from "../src/components/IntroductionCard";
import Characters from "../src/components/Characters/characters";
import Filters from "../src/components/Filters/filters";
import { useForm } from "react-hook-form";
import { useEffect, useState } from "react";
import { useCharacters } from "../src/hooks/characters";

const Home: NextPage = () => {
  const [nameFilter, setNameFilter] = useState("");
  const [statusFilter, setStatusFilter] = useState("");
  const [totalPages, setTotalPages] = useState(0);
  const [count, setCount] = useState(0);
  const [currentPage, setCurrentPage] = useState(1);
  const { data: { results, info } = {} as any, refetch } = useCharacters(
    nameFilter,
    statusFilter,
    currentPage
  );
  const { register, watch, setValue, control } = useForm();

  const onClearFilter = () => {
    setCurrentPage(1);
    setNameFilter("");
    setStatusFilter("");
    setValue("searchInput", "");
    setValue("statusFilter", { value: "", label: "" });
  };

  useEffect(() => {
    setTimeout(() => {
      setNameFilter(watch("searchInput"));
      setCurrentPage(1);
    }, 1000);
  }, [watch("searchInput")]);

  useEffect(() => {
    if (!watch("statusFilter")) return;
    const { value } = watch("statusFilter");
    setStatusFilter(value);
    setCurrentPage(1);
  }, [watch("statusFilter")]);

  useEffect(() => {
    refetch();
  }, [nameFilter, statusFilter, currentPage, refetch]);

  useEffect(() => {
    if (!info) return;
    const { pages, count } = info;
    setTotalPages(pages);
    setCount(count);
  }, [info]);

  return (
    <div className="h-full">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <IntroductionCard />
      <Filters
        register={register}
        control={control}
        onClearFilter={onClearFilter}
      />
      <Characters
        results={results || []}
        count={count}
        totalPages={totalPages}
        currentPage={currentPage}
        onPageChange={setCurrentPage}
      />
    </div>
  );
};

export default Home;
